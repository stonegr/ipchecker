name: Release ipchecker_task

# on: [push]
on: 
  push:
    branches:
      -main

  workflow_dispatch:

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: ${{ github.run_id }}
          draft: false
          prerelease: false
      
  study:
    name: Build ipchecker
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11.0, windows-2019]
        python-version: [3.x]
        # include:
        #   - os: ubuntu-20.04
        #     python-version: 3.x
        #     npm: 6

    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: ${{ matrix.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      

      - name: get code
        uses: actions/checkout@v3
        # with:
        #   path: ipchecker_linux

      - name: Install dependencies
        # working-directory: ipchecker_linux
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Build
        # working-directory: ipchecker_linux
        run: |
          pyinstaller -F main.py -n ipchecker

      - name: Package
        working-directory: ./dist
        run: |
          pwd
          ls -h
          tar -zcvf ipchecker-${{ matrix.os }}.tar.gz *
          ls -h

      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/ipchecker-${{ matrix.os }}.tar.gz
          asset_name: ipchecker-${{ matrix.os }}.tar.gz
          asset_content_type: application/gzip
